name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: python -m pip install -U "jupyterlab>=4.0.0,<5"

      - name: Lint the extension
        run: |
          set -eux
          jlpm
          jlpm run lint:check

      - name: Build the extension
        run: |
          set -eux
          jlpm
          jlpm build
          pip install -e ".[test]"
          jupyter labextension develop . --overwrite

          jupyter labextension list 2>&1 | grep -ie "jupyter-iframe-commands.*OK"

      - name: Build the npm packages
        run: |
          set -eux

          jlpm build:npm:dist

      - name: Package the extension
        run: |
          set -eux

          pip install build
          python -m build
          pip uninstall -y "jupyter_iframe_commands" jupyterlab

      - name: Upload extension packages
        uses: actions/upload-artifact@v4
        with:
          name: extension-artifacts
          path: dist/*
          if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          architecture: 'x64'
      - uses: actions/download-artifact@v4
        with:
          name: extension-artifacts
      - name: Install and Test
        run: |
          set -eux
          # Remove NodeJS, twice to take care of system and locally installed node versions.
          sudo rm -rf $(which node)
          sudo rm -rf $(which node)

          pip install "jupyterlab>=4.0.0,<5" jupyter_iframe_commands*.whl


          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "jupyter-iframe-commands.*OK"
          python -m jupyterlab.browser_check --no-browser-test

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Download extension package
        uses: actions/download-artifact@v4
        with:
          name: extension-artifacts

      - name: Install the extension
        run: |
          set -eux
          python -m pip install "jupyterlab>=4.0.0,<5" jupyter_iframe_commands*.whl
          jlpm
          jlpm build

      - name: Install dependencies
        working-directory: ui-tests
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: 0
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: jlpm install

      - name: Set up browser cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/pw-browsers
          key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

      - name: Install browser
        run: jlpm playwright install chromium
        working-directory: ui-tests

      - name: Execute integration tests
        working-directory: ui-tests
        run: |
          jlpm playwright test

      - name: Upload Playwright Test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jupyter_iframe_commands-playwright-tests
          path: |
            ui-tests/test-results
            ui-tests/playwright-report

  check_links:
    name: Check Links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
        with:
          ignore_links: https://github.com/TileDB-Inc/jupyter-iframe-commands/.*

  build-lite:
    name: Build JupyterLite
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install the dependencies
        run: |
          set -eux
          python -m pip install -r requirements.txt
          jlpm
          jlpm build
          python -m pip install .

      - name: Build the JupyterLite assets
        working-directory: demo
        run: |
          jlpm clean:lite
          jlpm build:lite

      - name: Install and build Vite dependencies
        working-directory: demo
        run: |
          jlpm
          jlpm build:ghpages

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./demo/dist

  deploy:
    needs: build-lite
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
